import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  CreateDateColumn,
  UpdateDateColumn,
  BeforeInsert,
} from "typeorm";
import bcrypt from "bcrypt"; // Use default import

@Entity("admin")
export class Admin {
  @PrimaryGeneratedColumn("uuid")
  id!: string; // Primary key, will be generated by TypeORM

  @Column({ length: 50 })
  firstName!: string; // First name of the admin

  @Column({ length: 50 })
  lastName!: string; // Last name of the admin

  @Column({ unique: true })
  email!: string; // Unique email for the admin

  @Column()
  password!: string; // Password of the admin

  @Column({ default: true })
  isActive: boolean = true; // Set default value to true

  @CreateDateColumn()
  createdAt: Date = new Date(); // Default value for createdAt

  @UpdateDateColumn()
  updatedAt: Date = new Date(); // Default value for updatedAt

  // Hash the password before saving
  @BeforeInsert()
  async hashPassword() {
    if (this.password) {
      this.password = await bcrypt.hash(this.password, 10); // Hash the password with bcrypt
    }
  }
}
